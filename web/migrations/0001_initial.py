# Generated by Django 3.1.6 on 2022-07-02 09:46

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('server_name', models.CharField(blank=True, max_length=32, verbose_name='SSH用户名')),
                ('server_private_key', models.TextField(blank=True, verbose_name='SSH私钥')),
                ('git_name', models.CharField(blank=True, max_length=32, null=True, verbose_name='git用户名')),
                ('git_pwd', models.CharField(blank=True, max_length=32, null=True, verbose_name='git密码')),
                ('wechat_user', models.CharField(max_length=64, null=True, verbose_name='微信用户名')),
                ('jobs', models.CharField(max_length=64, null=True, verbose_name='工作职位')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': '员工表',
                'verbose_name_plural': '员工表',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='部门')),
            ],
        ),
        migrations.CreateModel(
            name='Deploy',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.CharField(max_length=128, null=True, verbose_name='单文件列表')),
                ('branch', models.CharField(max_length=32, null=True, verbose_name='分支')),
                ('uid', models.CharField(blank=True, max_length=32, null=True, verbose_name='上线文件包名称')),
                ('time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='拉取时间')),
                ('status', models.IntegerField(choices=[(1, '未获取'), (2, '待发布'), (3, '已发布')], default=1, verbose_name='状态')),
            ],
        ),
        migrations.CreateModel(
            name='Host',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=32, verbose_name='主机名')),
                ('ssh_port', models.IntegerField(verbose_name='SSH端口')),
                ('other', models.CharField(blank=True, max_length=32, verbose_name='备注')),
            ],
        ),
        migrations.CreateModel(
            name='Script',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128, verbose_name='标题')),
                ('interpreter', models.CharField(choices=[('py', 'python3'), ('sh', 'bash')], default='py', max_length=16, verbose_name='解释器')),
                ('code', models.TextField(verbose_name='上传脚本')),
                ('rollback_code', models.TextField(null=True, verbose_name='回滚脚本')),
            ],
        ),
        migrations.CreateModel(
            name='Sqlcredential',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('database_name', models.CharField(max_length=256, verbose_name='修改库名')),
                ('Apply_time', models.DateTimeField(verbose_name='申请日期')),
                ('sql_yj', models.TextField(max_length=1024, verbose_name='SQL语句')),
                ('select_project', models.CharField(max_length=128, null=True, verbose_name='选择项目负责人审核')),
                ('select_test', models.CharField(default='', max_length=128, verbose_name='指定测试审核')),
                ('select_op', models.CharField(default='', max_length=128, verbose_name='指定运维审核')),
                ('Rollback_name', models.CharField(default='', max_length=128, verbose_name='回滚方案')),
                ('Development_qz', models.CharField(default='', max_length=128, verbose_name='开发签字')),
                ('Project_qz', models.CharField(default='', max_length=128, verbose_name='项目负责人签字')),
                ('Technical_qz', models.CharField(default='', max_length=128, verbose_name='技术总监签字')),
                ('op_qz', models.CharField(default='', max_length=256, verbose_name='运维签字')),
                ('Project_confirm_qz', models.CharField(default='', max_length=128, verbose_name='项目负责人（产品）确认签字')),
                ('status', models.IntegerField(choices=[(1, '提交更新'), (2, '负责人审核通过'), (3, '运维上线完成'), (4, '否决上线'), (5, '回滚'), (6, '流程结束')], default=1, verbose_name='状态')),
                ('staff', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.userinfo')),
            ],
        ),
        migrations.CreateModel(
            name='RollbackRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_version', models.CharField(max_length=32, null=True, verbose_name='版本')),
                ('status', models.IntegerField(choices=[(1, '回滚中'), (2, '回滚成功'), (3, '回滚失败')], default=1, verbose_name='状态')),
                ('deploy_time', models.DateTimeField(auto_now_add=True, verbose_name='回滚时间')),
                ('rollback_log', models.TextField(verbose_name='日志')),
                ('deploy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.deploy', verbose_name='部署任务')),
                ('host', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.host', verbose_name='主机')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=32, verbose_name='项目名称')),
                ('git', models.CharField(max_length=128, verbose_name='仓库地址')),
                ('private', models.BooleanField(default=True, verbose_name='是否私有')),
                ('online_path', models.CharField(max_length=128, verbose_name='线上项目路径')),
                ('depart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.department', verbose_name='部门')),
                ('hosts', models.ManyToManyField(to='web.Host', verbose_name='关联主机')),
            ],
        ),
        migrations.CreateModel(
            name='Onlinedetails',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Online_project', models.CharField(blank=True, max_length=256, verbose_name='上线项目(版本号)')),
                ('Online_time', models.DateTimeField(max_length=256, null=True, verbose_name='上线日期')),
                ('Rollback_name', models.CharField(max_length=128, null=True, verbose_name='回滚方案')),
                ('Online_step', models.TextField(null=True, verbose_name='上线步骤')),
                ('Branch_status', models.CharField(max_length=256, verbose_name='分支合并状态')),
                ('Influence', models.CharField(max_length=256, verbose_name='代码修改影响点')),
                ('select_project', models.CharField(default='', max_length=128, null=True, verbose_name='选择项目负责人审核')),
                ('select_test', models.CharField(default='', max_length=128, null=True, verbose_name='指定测试审核')),
                ('select_op', models.CharField(default='', max_length=128, null=True, verbose_name='指定运维审核')),
                ('Op_qz', models.CharField(default='', max_length=256, null=True, verbose_name='运维签字')),
                ('Rd_qz', models.CharField(max_length=256, null=True, verbose_name='rd签字')),
                ('Test_qz', models.CharField(default='', max_length=256, null=True, verbose_name='测试签字')),
                ('Ui_qz', models.CharField(default='', max_length=256, null=True, verbose_name='ui签字')),
                ('Pm_qz', models.CharField(default='', max_length=256, null=True, verbose_name='产品签字')),
                ('Zj_qz', models.CharField(default='', max_length=256, null=True, verbose_name='总监签字')),
                ('Rallback_result', models.CharField(default='', max_length=256, null=True, verbose_name='回归结果测试产品签字')),
                ('status', models.IntegerField(choices=[(1, '提交更新'), (2, '负责人审核通过'), (3, '预上线'), (4, '代码上线完成'), (5, '回归中'), (6, '回归完成'), (7, '回滚'), (8, '否决上线'), (9, '流程结束')], default=1, verbose_name='状态')),
                ('staff', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.userinfo')),
            ],
            options={
                'verbose_name': '上线单详情表',
                'verbose_name_plural': '上线单详情表',
            },
        ),
        migrations.CreateModel(
            name='DeployRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host_version', models.CharField(max_length=32, null=True, verbose_name='版本')),
                ('status', models.IntegerField(choices=[(1, '发布中'), (2, '发布成功'), (3, '发布失败')], default=1, null=True, verbose_name='状态')),
                ('deploy_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='发布时间')),
                ('log', models.TextField(verbose_name='日志')),
                ('deploy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.deploy', verbose_name='部署任务')),
                ('host', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='web.host', verbose_name='主机')),
            ],
        ),
        migrations.AddField(
            model_name='deploy',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='web.project', verbose_name='项目'),
        ),
        migrations.AddField(
            model_name='deploy',
            name='script',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='web.script', verbose_name='script'),
        ),
    ]
